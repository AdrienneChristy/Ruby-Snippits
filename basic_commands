
print "Oxnard Montalvo"
The print command just takes whatever you give it and prints it to the screen.

puts "What's up?"
puts (for "put string") is slightly different: it adds a new (blank) line after the thing you want it to print.


.length 
outputs length of the string
"I love espresso".length

.reverse 
outputs reversed order version of the string
"String".reverse

.upcase

.downcase

.capitalize
capitalizes the first letter of a string and makes the rest of the letters lower case.

! at the end of capitalize. This modifies the value contained within the variable answer itself. The next time you use the variable answer you will get the results of answer.capitalize

== 
is equal to

!=
is not equal to


logical or boolean operators:
Ruby has three: 
and (&&), or (||), and not (!)
Ruby's || is called an inclusive or because it evaluates to true when one or the other or both expressions are true.


.include? 
method which evaluates to true if it finds what it's looking for and false otherwise.

.gsub! 
method which stands for global substitution.
The syntax looks like this:
string_to_change.gsub!(/s/, "th")
/s/ has to be between slashes instead of between quotes. Note: you cannot put a space between gsub! and the bit in parentheses.

assignment operators 
=, +=, -=, *=, and /=



# I'm a comment!

=begin
I'm a multiline comment!
I don't need any # symbols.
Remember begin and end must be on their own lines.
=end
